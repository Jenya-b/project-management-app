{"version":3,"file":"static/js/934.b1039699.chunk.js","mappings":"yKAGaA,E,QAAsDC,I,yKCI7DC,EAASC,EAAAA,MAAW,kBAAM,wDAC1BC,EAASD,EAAAA,MAAW,kBAAM,8DAMnBE,EAAQ,SAACC,GACpB,IAAQC,GAAMC,EAAAA,EAAAA,KAAND,EACFE,EAAMH,EAAMG,KAAqB,WAAdH,EAAMG,IAAmB,SAAW,SAC7D,GAAgCC,EAAAA,EAAAA,UAAiBD,GAAjD,eAAOE,EAAP,KAAiBC,EAAjB,KAKA,OACE,iBAAMC,UAAU,OAAhB,UACE,UAACC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,aAAc,EAAGC,YAAa,WAAzC,UACE,UAACC,EAAA,EAAD,CAAMC,MAAOT,EAAUU,SARV,SAACC,EAA6BF,GACjDR,EAAYQ,IAOyCG,QAAQ,YAAvD,WACE,SAACC,EAAA,EAAD,CAAKJ,MAAM,SAASK,MAAOlB,EAAE,YAC7B,SAACiB,EAAA,EAAD,CAAKJ,MAAM,SAASK,MAAOlB,EAAE,iBAGnB,WAAbI,IACC,SAAC,WAAD,CAAgBe,UAAU,SAAC,IAAD,CAASC,WAAW,IAA9C,UACE,SAACzB,EAAD,MAGU,WAAbS,IAAyB,SAACP,EAAD,U,wCC9BrBwB,EAAa,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,SACnBC,GAAU9B,EAAAA,EAAAA,IAAe,SAAC+B,GAAD,OAAsBA,EAAMC,gBAArDF,MACAG,EAAaC,EAAAA,EAAAA,SAErB,OAAIJ,GACFK,aAAaC,QAAQC,EAAAA,EAAWP,IACzB,SAAC,KAAD,CAAUQ,GAAE,UAAKL,GAAYM,SAAO,KAGtCV,GCLT,EANkB,SAACvB,GAAD,OAChB,SAACsB,EAAD,WACE,SAACvB,GAAD,UAAWC","sources":["hooks/useAppSelector.ts","modules/pages/login/Login.tsx","modules/components/routerWrapper/passedAuth.tsx","modules/pages/login/index.tsx"],"sourcesContent":["import { useSelector, TypedUseSelectorHook } from 'react-redux';\r\nimport { RootStateType } from '../modules/types';\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<RootStateType> = useSelector;\r\n","import React from 'react';\r\nimport './index.scss';\r\nimport { Container, Box, Tabs, Tab } from '@mui/material';\r\nimport { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Loading } from '../../components/loading';\r\n\r\nconst SignIn = React.lazy(() => import('./signin'));\r\nconst SignUp = React.lazy(() => import('./signup'));\r\n\r\nexport interface LoginProps {\r\n  tab?: string;\r\n}\r\n\r\nexport const Login = (props: LoginProps) => {\r\n  const { t } = useTranslation();\r\n  const tab = props.tab && props.tab === 'signup' ? 'signup' : 'signin';\r\n  const [tabIndex, setTabIndex] = useState<string>(tab);\r\n  const handleChange = (event: React.SyntheticEvent, value: string) => {\r\n    setTabIndex(value);\r\n  };\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <Container>\r\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n          <Tabs value={tabIndex} onChange={handleChange} variant=\"fullWidth\">\r\n            <Tab value=\"signin\" label={t('logIn')} />\r\n            <Tab value=\"signup\" label={t('signUp')} />\r\n          </Tabs>\r\n        </Box>\r\n        {tabIndex === 'signin' && (\r\n          <React.Suspense fallback={<Loading isLoading={true} />}>\r\n            <SignIn />\r\n          </React.Suspense>\r\n        )}\r\n        {tabIndex === 'signup' && <SignUp />}\r\n      </Container>\r\n    </main>\r\n  );\r\n};\r\n","import { Navigate } from 'react-router-dom';\r\nimport { useAppSelector } from '../../../hooks/useAppSelector';\r\nimport { RootState } from '../../../store/store';\r\nimport { pathToPage } from '../../constants/constRoutes';\r\nimport { TOKEN_KEY } from '../../constants/constLocalStorage';\r\n\r\nexport const PassedAuth = ({ children }: { children: JSX.Element }) => {\r\n  const { token } = useAppSelector((state: RootState) => state.loginReducer);\r\n  const { homePath } = pathToPage;\r\n\r\n  if (token) {\r\n    localStorage.setItem(TOKEN_KEY, token);\r\n    return <Navigate to={`${homePath}`} replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n","import { Login } from './Login';\r\nimport { PassedAuth } from '../../components/routerWrapper/passedAuth';\r\nimport { LoginProps } from './Login';\r\n\r\nconst LoginPage = (props: LoginProps) => (\r\n  <PassedAuth>\r\n    <Login {...props} />\r\n  </PassedAuth>\r\n);\r\n\r\nexport default LoginPage;\r\n"],"names":["useAppSelector","useSelector","SignIn","React","SignUp","Login","props","t","useTranslation","tab","useState","tabIndex","setTabIndex","className","Container","Box","sx","borderBottom","borderColor","Tabs","value","onChange","event","variant","Tab","label","fallback","isLoading","PassedAuth","children","token","state","loginReducer","homePath","pathToPage","localStorage","setItem","TOKEN_KEY","to","replace"],"sourceRoot":""}