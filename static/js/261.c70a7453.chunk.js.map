{"version":3,"file":"static/js/261.c70a7453.chunk.js","mappings":"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","sources":["hooks/useAppDispatch.ts","hooks/useAppSelector.ts","modules/components/button/index.tsx","modules/components/confirmationDialog/index.tsx","modules/components/errorSnackbar/errorSnackbar.tsx","modules/constants/constHeader.ts","modules/components/header/newProjectModal/index.tsx","modules/components/header/index.tsx","modules/components/modal/index.tsx","modules/components/requireUser/index.tsx","modules/components/routerWrapper/requiereAuth.tsx","modules/constants/constGlobal.ts","modules/pages/editProfile/EditProfile.tsx","modules/pages/editProfile/index.tsx","../node_modules/@mui/material/Container/containerClasses.js","../node_modules/@mui/material/Container/Container.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\r\nimport { AppDispatch } from '../store/store';\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\n","import { useSelector, TypedUseSelectorHook } from 'react-redux';\r\nimport { RootStateType } from '../modules/types';\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<RootStateType> = useSelector;\r\n","import { Button } from '@mui/material';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { PRIMARY_COLOR } from '../../constants/constGlobal';\r\nimport { ButtonType } from '../../types';\r\n\r\nexport const PrimaryBtn = ({ variant, text, onClick }: ButtonType) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Button variant={variant} sx={{ backgroundColor: PRIMARY_COLOR }} onClick={onClick}>\r\n      {t(text)}\r\n    </Button>\r\n  );\r\n};\r\n","import DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ConfirmationDialogType } from '../../types';\r\nimport './index.scss';\r\n\r\nexport const ConfirmationDialog = ({ title, desc }: ConfirmationDialogType) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <>\r\n      <DialogTitle>{t(title)}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{t(desc)}</DialogContentText>\r\n      </DialogContent>\r\n    </>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { Box, Snackbar } from '@mui/material';\r\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\r\n\r\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\ninterface ErrorSnackbarProps {\r\n  messages: string[];\r\n}\r\n\r\nexport default function ErrorSnackbar({ messages }: ErrorSnackbarProps) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setOpen(!!messages.length);\r\n  }, [messages]);\r\n\r\n  return (\r\n    <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n      <Box>\r\n        {messages.map((message) => (\r\n          <Alert key={message} severity=\"error\" sx={{ width: '100%', marginBottom: '1em' }}>\r\n            {message}\r\n          </Alert>\r\n        ))}\r\n      </Box>\r\n    </Snackbar>\r\n  );\r\n}\r\n","export const navLinkTitle = ['homePage'];\r\n\r\nexport const settingsProfile = ['editProfile', 'logOut'];\r\n\r\nexport const [EDIT_PROFILE, LOG_OUT] = settingsProfile;\r\n\r\nexport const LOG_OUT_TEXT = 'logOutModal';\r\n\r\nexport const NEW_PROJECT = 'newProject';\r\n","import { Box, TextField, Typography } from '@mui/material';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAppDispatch } from '../../../../hooks/useAppDispatch';\r\nimport { useAppSelector } from '../../../../hooks/useAppSelector';\r\nimport { createProject, fetchProjects } from '../../../../store/reducers/projects/projectsThunks';\r\nimport { TEXT_FIELD_WIDTH } from '../../../constants/constGlobal';\r\nimport { useForm } from 'react-hook-form';\r\nimport { BasicModal } from '../../modal';\r\nimport { pathToPage } from '../../../constants/constRoutes';\r\nimport { Loading } from '../../loading';\r\nimport { useEffect } from 'react';\r\nimport { projectsSlice } from '../../../../store/reducers/projects/projectsSlice';\r\nimport ErrorSnackbar from '../../errorSnackbar/errorSnackbar';\r\n\r\nexport type FormValues = {\r\n  title: string;\r\n  description: string;\r\n};\r\n\r\ninterface NewProjectModalProps {\r\n  isModalActive: boolean;\r\n  closeConfirmationDialog: () => void;\r\n  confirmAction: () => void;\r\n}\r\n\r\nexport const NewProjectModal = ({\r\n  isModalActive,\r\n  closeConfirmationDialog,\r\n  confirmAction,\r\n}: NewProjectModalProps) => {\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n  const { homePath } = pathToPage;\r\n  const { t } = useTranslation();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<FormValues>();\r\n  const { newProjectCreated, newProjectCreating, newProjectErrors } = useAppSelector(\r\n    (state) => state.projectsReducer\r\n  );\r\n  const { resetProjectCreated, clearNewProjectErrors } = projectsSlice.actions;\r\n\r\n  const submitForm = (data: FormValues) => {\r\n    const { title, description } = data;\r\n    dispatch(createProject({ projectData: { title, description } }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (newProjectCreated) {\r\n      dispatch(fetchProjects());\r\n      navigate(homePath);\r\n      dispatch(resetProjectCreated());\r\n      confirmAction();\r\n    }\r\n  }, [newProjectCreated, dispatch, navigate, resetProjectCreated, confirmAction, homePath]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(clearNewProjectErrors());\r\n    };\r\n  }, [dispatch, clearNewProjectErrors]);\r\n\r\n  return (\r\n    <BasicModal\r\n      isActive={isModalActive}\r\n      closeWindow={closeConfirmationDialog}\r\n      confirmAction={handleSubmit(submitForm)}\r\n    >\r\n      {newProjectCreating ? (\r\n        <Loading isLoading={true} />\r\n      ) : (\r\n        <>\r\n          <Typography variant=\"h6\" component=\"h2\">\r\n            {t('newProjectTypography')}\r\n          </Typography>\r\n          <Box sx={{ display: 'flex', flexDirection: 'column' }}>\r\n            <Typography sx={{ mt: 2 }} variant=\"body1\" component=\"p\">\r\n              {t('projectName')}\r\n            </Typography>\r\n            <TextField\r\n              placeholder={t('title')}\r\n              sx={{ mb: 2, mt: 1, width: TEXT_FIELD_WIDTH }}\r\n              {...register('title', { required: 'projectTitleFieldRequiredError' })}\r\n              error={!!errors.title}\r\n              helperText={\r\n                errors.title ? t(String(errors.title.message)) : t('projectTitleFieldHelpText')\r\n              }\r\n            />\r\n            <Typography sx={{ mt: 1 }} variant=\"body1\" component=\"p\">\r\n              {t('projectDesc')}\r\n            </Typography>\r\n            <TextField\r\n              placeholder={t('description')}\r\n              multiline\r\n              rows={5}\r\n              sx={{ mb: 4, mt: 1, width: '17.5rem' }}\r\n              {...register('description', { required: 'projectDescriptionFieldRequiredError' })}\r\n              error={!!errors.description}\r\n              helperText={\r\n                errors.description\r\n                  ? t(String(errors.description.message))\r\n                  : t('projectDescriptionFieldHelpText')\r\n              }\r\n            />\r\n          </Box>\r\n          <ErrorSnackbar messages={newProjectErrors} />\r\n        </>\r\n      )}\r\n    </BasicModal>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport {\r\n  EDIT_PROFILE,\r\n  LOG_OUT,\r\n  LOG_OUT_TEXT,\r\n  navLinkTitle,\r\n  settingsProfile,\r\n  NEW_PROJECT,\r\n} from '../../constants/constHeader';\r\nimport { pathToPage } from '../../constants/constRoutes';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport {\r\n  AppBar,\r\n  Avatar,\r\n  Box,\r\n  FormLabel,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Toolbar,\r\n  Tooltip,\r\n  Typography,\r\n} from '@mui/material';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport './index.scss';\r\nimport { useAppDispatch } from '../../../hooks/useAppDispatch';\r\nimport { langInterfaceSlice } from '../../../store/reducers/langInterfaceSlice';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ConfirmationDialog } from '../confirmationDialog';\r\nimport { confirmationDialogSlice } from '../../../store/reducers/confirmationDialogSlice';\r\nimport { useAppSelector } from '../../../hooks/useAppSelector';\r\nimport { BasicModal } from '../modal';\r\nimport { logout } from '../../../store/reducers/login/loginSlice';\r\nimport { USER_DATA_KEY, TOKEN_KEY } from '../../constants/constLocalStorage';\r\nimport { NewProjectModal } from './newProjectModal';\r\nimport useScrollTrigger from '@mui/material/useScrollTrigger';\r\n\r\nexport const Header = () => {\r\n  const [anchorElNav, setAnchorElNav] = useState<null | HTMLElement>(null);\r\n  const [anchorElUser, setAnchorElUser] = useState<null | HTMLElement>(null);\r\n  const [color, setColor] = useState<string>('#ffffff');\r\n  const { language } = useAppSelector((state) => state.langInterfaceReducer);\r\n  const [isEnglishLanguage, setIsEnglishLanguage] = useState<boolean>(language === 'en');\r\n  const [infoDialog, setInfoDialog] = useState<string>('');\r\n  const dispatch = useAppDispatch();\r\n  const { isModalActive } = useAppSelector((state) => state.confirmationDialog);\r\n  const { setLanguage } = langInterfaceSlice.actions;\r\n  const { setDialogActivity } = confirmationDialogSlice.actions;\r\n  const { t, i18n } = useTranslation();\r\n  const navigate = useNavigate();\r\n  const { editProfilePath } = pathToPage;\r\n\r\n  useEffect(() => {\r\n    dispatch(setLanguage(isEnglishLanguage ? 'en' : 'ru'));\r\n    i18n.changeLanguage(isEnglishLanguage ? 'en' : 'ru');\r\n  }, [dispatch, i18n, isEnglishLanguage, setLanguage]);\r\n\r\n  const trigger = useScrollTrigger();\r\n\r\n  useEffect(() => {\r\n    getRandomColor();\r\n  }, [trigger]);\r\n\r\n  const handleLanguageChange = (event: React.FormEvent<HTMLInputElement>) => {\r\n    const { checked } = event.currentTarget;\r\n    setIsEnglishLanguage(checked);\r\n  };\r\n\r\n  const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n  const handleOpenUserMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  const closeConfirmationDialog = () => {\r\n    dispatch(setDialogActivity(false));\r\n  };\r\n\r\n  const confirmAction = () => {\r\n    switch (infoDialog) {\r\n      case LOG_OUT_TEXT:\r\n        signOut();\r\n        break;\r\n    }\r\n    closeConfirmationDialog();\r\n    setTimeout(() => setInfoDialog(''), 500);\r\n  };\r\n\r\n  const clickMenuItem = (item: string) => {\r\n    switch (item) {\r\n      case EDIT_PROFILE:\r\n        navigate(editProfilePath);\r\n        break;\r\n      case LOG_OUT:\r\n        setInfoDialog(LOG_OUT_TEXT);\r\n        dispatch(setDialogActivity(true));\r\n        break;\r\n      case NEW_PROJECT:\r\n        setInfoDialog(NEW_PROJECT);\r\n        dispatch(setDialogActivity(true));\r\n        break;\r\n    }\r\n    handleCloseUserMenu();\r\n  };\r\n\r\n  const signOut = () => {\r\n    localStorage.removeItem(USER_DATA_KEY);\r\n    localStorage.removeItem(TOKEN_KEY);\r\n    dispatch(logout());\r\n  };\r\n\r\n  const getRandomColor = () => {\r\n    const r = Math.floor(Math.random() * 256);\r\n    const g = Math.floor(Math.random() * 256);\r\n    const b = Math.floor(Math.random() * 256);\r\n    const rgba = `rgba(${r},${g},${b}, .1)`;\r\n    setColor(rgba);\r\n    return rgba;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar\r\n        className=\"header\"\r\n        position=\"sticky\"\r\n        sx={{\r\n          backgroundColor: '#ffffff',\r\n          boxShadow: 'unset',\r\n          borderBottom: 'solid 2px rgba(0, 0, 0, .1)',\r\n          height: '5.2rem',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            backgroundColor: trigger ? color : '#ffffff',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            transition: '.3s',\r\n            height: '5.2rem',\r\n          }}\r\n        >\r\n          <Toolbar disableGutters sx={{ mx: 4, justifyContent: 'space-between', width: '100%' }}>\r\n            <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\r\n              <IconButton\r\n                size=\"large\"\r\n                aria-label=\"navigation\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleOpenNavMenu}\r\n                color=\"default\"\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorElNav}\r\n                anchorOrigin={{\r\n                  vertical: 'bottom',\r\n                  horizontal: 'left',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'left',\r\n                }}\r\n                open={Boolean(anchorElNav)}\r\n                onClose={handleCloseNavMenu}\r\n                sx={{ mt: '12px', display: { xs: 'block', md: 'none' } }}\r\n              >\r\n                {navLinkTitle.map((title) => (\r\n                  <NavLink key={title} to={pathToPage[`${title.slice(0, -2)}th`]}>\r\n                    <MenuItem\r\n                      onClick={handleCloseNavMenu}\r\n                      sx={{\r\n                        border: 'solid 2px rgba(0, 0, 0, .1)',\r\n                        borderTop: 'none',\r\n                        backgroundColor: trigger ? color : '#ffffff',\r\n                      }}\r\n                    >\r\n                      <Typography textAlign=\"center\">{t(title)}</Typography>\r\n                    </MenuItem>\r\n                  </NavLink>\r\n                ))}\r\n              </Menu>\r\n            </Box>\r\n\r\n            <Box\r\n              sx={{ flexGrow: 0, display: { xs: 'none', md: 'flex' }, justifyContent: 'center' }}\r\n            >\r\n              {navLinkTitle.map((title) => (\r\n                <NavLink\r\n                  key={title}\r\n                  to={pathToPage[`${title.slice(0, -2)}th`]}\r\n                  className=\"header__link\"\r\n                  onClick={handleCloseNavMenu}\r\n                >\r\n                  {t(title)}\r\n                </NavLink>\r\n              ))}\r\n            </Box>\r\n            <Box sx={{ display: 'flex', columnGap: '1.5rem' }}>\r\n              <Tooltip title={t('createNewBoardHelperText')}>\r\n                <IconButton\r\n                  onClick={() => clickMenuItem(NEW_PROJECT)}\r\n                  size=\"large\"\r\n                  aria-label=\"create new board\"\r\n                >\r\n                  <AddIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <FormLabel id=\"language-switcher\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"language-switcher__checkbox\"\r\n                  checked={isEnglishLanguage}\r\n                  onChange={handleLanguageChange}\r\n                />\r\n\r\n                <span id=\"round-slider\"></span>\r\n                <span id=\"select-ru\">RU</span>\r\n                <span id=\"select-en\">EN</span>\r\n              </FormLabel>\r\n              <IconButton\r\n                onClick={handleOpenUserMenu}\r\n                sx={{\r\n                  p: 0,\r\n                }}\r\n              >\r\n                <Avatar\r\n                  src=\"/static/images/avatar.jpg\"\r\n                  sx={{\r\n                    overflow: 'visible',\r\n                    '&:before': {\r\n                      content: '\"❯\"',\r\n                      color: '#ffffff',\r\n                      position: 'absolute',\r\n                      backgroundColor: '#3026b9',\r\n                      borderRadius: '50%',\r\n                      height: '1em',\r\n                      top: '2.6em',\r\n                      left: '0',\r\n                      mt: '-1em',\r\n                      transform: 'rotate(90deg)',\r\n                      width: '1em',\r\n                    },\r\n                  }}\r\n                />\r\n              </IconButton>\r\n              <Menu\r\n                sx={{ mt: '55px' }}\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorElUser}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={Boolean(anchorElUser)}\r\n                onClose={handleCloseUserMenu}\r\n              >\r\n                {settingsProfile.map((setting) => (\r\n                  <MenuItem\r\n                    key={setting}\r\n                    onClick={() => clickMenuItem(setting)}\r\n                    sx={{\r\n                      border: 'solid 2px rgba(0, 0, 0, .1)',\r\n                      borderTop: 'none',\r\n                      backgroundColor: trigger ? color : '#ffffff',\r\n                    }}\r\n                  >\r\n                    <Typography textAlign=\"center\">{t(setting)}</Typography>\r\n                  </MenuItem>\r\n                ))}\r\n              </Menu>\r\n            </Box>\r\n          </Toolbar>\r\n        </Box>\r\n      </AppBar>\r\n      {infoDialog === NEW_PROJECT ? (\r\n        <NewProjectModal\r\n          isModalActive={isModalActive}\r\n          closeConfirmationDialog={closeConfirmationDialog}\r\n          confirmAction={confirmAction}\r\n        />\r\n      ) : (\r\n        <BasicModal\r\n          isActive={isModalActive}\r\n          closeWindow={closeConfirmationDialog}\r\n          confirmAction={confirmAction}\r\n        >\r\n          <ConfirmationDialog title=\"titleModal\" desc={infoDialog} />\r\n        </BasicModal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport { BasicModalType } from '../../types';\r\nimport { PrimaryBtn } from '../button';\r\nimport './index.scss';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  paddingLeft: 10,\r\n  paddingRight: 10,\r\n  paddingTop: 4,\r\n  paddingBottom: 4,\r\n};\r\n\r\nexport const BasicModal = ({ isActive, closeWindow, confirmAction, children }: BasicModalType) => (\r\n  <Modal open={isActive} onClose={closeWindow}>\r\n    <Box sx={style}>\r\n      {children}\r\n      <div className=\"modal-btn-wrapp\">\r\n        <PrimaryBtn variant=\"contained\" text=\"btnDialogOk\" onClick={confirmAction} />\r\n        <PrimaryBtn variant=\"contained\" text=\"btnDialogCancel\" onClick={closeWindow} />\r\n      </div>\r\n    </Box>\r\n  </Modal>\r\n);\r\n","import { useEffect } from 'react';\r\nimport { useAppSelector } from '../../../hooks/useAppSelector';\r\nimport { useAppDispatch } from '../../../hooks/useAppDispatch';\r\nimport { fetchUsers } from '../../../store/reducers/users/usersThunks';\r\nimport { setCurrentUser } from '../../../store/reducers/users/usersSlice';\r\nimport { Loading } from '../../components/loading';\r\nimport { USER_DATA_KEY } from '../../constants/constLocalStorage';\r\n\r\nexport const RequireUser = ({ children }: { children: JSX.Element }) => {\r\n  const { currentUser } = useAppSelector((state) => state.usersReducer);\r\n  const { users } = useAppSelector((state) => state.usersReducer);\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    const currentUserData = users.find((user) => user.login === currentUser.login);\r\n    if (!currentUserData) {\r\n      dispatch(fetchUsers());\r\n    } else {\r\n      localStorage.setItem(USER_DATA_KEY, JSON.stringify(currentUserData));\r\n      dispatch(setCurrentUser(currentUserData));\r\n    }\r\n  }, [users, currentUser, dispatch]);\r\n\r\n  if (!currentUser.id) {\r\n    return <Loading isLoading={true} />;\r\n  }\r\n\r\n  return children;\r\n};\r\n","import { Navigate } from 'react-router-dom';\r\nimport { useAppSelector } from '../../../hooks/useAppSelector';\r\nimport { RootState } from '../../../store/store';\r\nimport { pathToPage } from '../../constants/constRoutes';\r\n\r\nexport const RequireAuth = ({ children }: { children: JSX.Element }) => {\r\n  const { token } = useAppSelector((state: RootState) => state.loginReducer);\r\n  const { welcomePath } = pathToPage;\r\n\r\n  if (!token) {\r\n    return <Navigate to={`/${welcomePath}`} replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n","export const PRIMARY_COLOR = '#3026b9';\r\nexport const BACKGROUND_COLOR = '#fafcff';\r\nexport const COLUMN_COLOR = '#f4f5f8';\r\nexport const TEXT_FIELD_WIDTH = '17.5rem';\r\n","import { useEffect } from 'react';\r\nimport './index.scss';\r\nimport { useAppSelector } from '../../../hooks/useAppSelector';\r\nimport { useAppDispatch } from '../../../hooks/useAppDispatch';\r\nimport { Container, TextField, Button, Typography } from '@mui/material';\r\nimport { updateUser } from '../../../store/reducers/users/usersThunks';\r\nimport ErrorSnackbar from '../../components/errorSnackbar/errorSnackbar';\r\nimport { clearErrors } from '../../../store/reducers/users/usersSlice';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Loading } from '../../components/loading';\r\nimport { Header } from '../../components/header';\r\n\r\nexport type FormValues = {\r\n  name: string;\r\n  login: string;\r\n  password: string;\r\n};\r\n\r\nexport const EditProfile = () => {\r\n  const { t } = useTranslation();\r\n  const {\r\n    currentUser,\r\n    loading,\r\n    errors: serverErrors,\r\n  } = useAppSelector((state) => state.usersReducer);\r\n  const dispatch = useAppDispatch();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<FormValues>({ defaultValues: { name: currentUser.name, login: currentUser.login } });\r\n\r\n  const submitForm = (data: FormValues) => {\r\n    const { name, login, password } = data;\r\n    dispatch(updateUser({ id: currentUser.id, userData: { name, login, password } }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(clearErrors());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  if (loading) {\r\n    return <Loading isLoading={true} />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"main\">\r\n        <Container>\r\n          <Typography align=\"center\" sx={{ mt: 4, mb: 2, fontSize: '1.8rem' }} variant=\"h6\">\r\n            {t('editProfile')}\r\n          </Typography>\r\n          <form className=\"login-form\" onSubmit={handleSubmit(submitForm)}>\r\n            <TextField\r\n              label={t('nameFieldLabel')}\r\n              className=\"login-form__field-input\"\r\n              type=\"text\"\r\n              sx={{ marginTop: '1em' }}\r\n              {...register('name', { required: 'nameFieldRequiredError' })}\r\n              error={!!errors.name}\r\n              helperText={errors.name ? t(String(errors.name?.message)) : t('nameFieldHelpText')}\r\n            />\r\n            <TextField\r\n              label={t('loginFieldLabel')}\r\n              className=\"login-form__field-input\"\r\n              type=\"text\"\r\n              autoComplete=\"userlogin\"\r\n              sx={{ marginTop: '1em' }}\r\n              {...register('login', { required: 'loginFieldRequiredError' })}\r\n              error={!!errors.login}\r\n              helperText={\r\n                errors.login ? t(String(errors.login?.message)) : t('loginFieldSignUpHelpText')\r\n              }\r\n            />\r\n            <TextField\r\n              label={t('passwordFieldLabel')}\r\n              className=\"login-form__field-input\"\r\n              type=\"password\"\r\n              autoComplete=\"new-password\"\r\n              sx={{ marginTop: '1em' }}\r\n              {...register('password', { required: 'passwordFieldRequiredError' })}\r\n              error={!!errors.password}\r\n              helperText={\r\n                errors.password\r\n                  ? t(String(errors.password?.message))\r\n                  : t('passwordFieldSignUpHelpText')\r\n              }\r\n            />\r\n            <Button type=\"submit\" sx={{ marginTop: '1em' }}>\r\n              {t('update')}\r\n            </Button>\r\n          </form>\r\n          <ErrorSnackbar messages={serverErrors} />\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { EditProfile } from './EditProfile';\r\nimport { RequireAuth } from '../../components/routerWrapper/requiereAuth';\r\nimport { RequireUser } from '../../components/requireUser';\r\n\r\nconst EditProfilePage = () => (\r\n  <RequireAuth>\r\n    <RequireUser>\r\n      <EditProfile />\r\n    </RequireUser>\r\n  </RequireAuth>\r\n);\r\n\r\nexport default EditProfilePage;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiContainer', slot);\n}\nconst containerClasses = generateUtilityClasses('MuiContainer', ['root', 'disableGutters', 'fixed', 'maxWidthXs', 'maxWidthSm', 'maxWidthMd', 'maxWidthLg', 'maxWidthXl']);\nexport default containerClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getContainerUtilityClass } from './containerClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\n\nconst ContainerRoot = styled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  width: '100%',\n  marginLeft: 'auto',\n  boxSizing: 'border-box',\n  marginRight: 'auto',\n  display: 'block'\n}, !ownerState.disableGutters && {\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  [theme.breakpoints.up('sm')]: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3)\n  }\n}), ({\n  theme,\n  ownerState\n}) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n  const value = theme.breakpoints.values[breakpoint];\n\n  if (value !== 0) {\n    acc[theme.breakpoints.up(breakpoint)] = {\n      maxWidth: `${value}${theme.breakpoints.unit}`\n    };\n  }\n\n  return acc;\n}, {}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.maxWidth === 'xs' && {\n  [theme.breakpoints.up('xs')]: {\n    maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n  }\n}, ownerState.maxWidth && ownerState.maxWidth !== 'xs' && {\n  [theme.breakpoints.up(ownerState.maxWidth)]: {\n    maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n  }\n}));\nconst Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  });\n\n  const {\n    className,\n    component = 'div',\n    disableGutters = false,\n    fixed = false,\n    maxWidth = 'lg'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    disableGutters,\n    fixed,\n    maxWidth\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ContainerRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","PrimaryBtn","variant","text","onClick","t","useTranslation","sx","backgroundColor","PRIMARY_COLOR","ConfirmationDialog","title","desc","DialogTitle","DialogContent","DialogContentText","Alert","React","props","ref","elevation","ErrorSnackbar","messages","open","setOpen","length","autoHideDuration","onClose","map","message","severity","width","marginBottom","navLinkTitle","settingsProfile","EDIT_PROFILE","LOG_OUT","LOG_OUT_TEXT","NEW_PROJECT","NewProjectModal","isModalActive","closeConfirmationDialog","confirmAction","dispatch","navigate","useNavigate","homePath","pathToPage","useForm","register","handleSubmit","errors","formState","state","projectsReducer","newProjectCreated","newProjectCreating","newProjectErrors","projectsSlice","resetProjectCreated","clearNewProjectErrors","useEffect","fetchProjects","isActive","closeWindow","data","description","createProject","projectData","isLoading","Typography","component","Box","display","flexDirection","mt","TextField","placeholder","mb","TEXT_FIELD_WIDTH","required","error","helperText","String","multiline","rows","Header","useState","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","color","setColor","language","langInterfaceReducer","isEnglishLanguage","setIsEnglishLanguage","infoDialog","setInfoDialog","confirmationDialog","setLanguage","langInterfaceSlice","setDialogActivity","confirmationDialogSlice","i18n","editProfilePath","changeLanguage","trigger","useScrollTrigger","getRandomColor","handleCloseNavMenu","handleCloseUserMenu","signOut","setTimeout","clickMenuItem","item","localStorage","removeItem","USER_DATA_KEY","TOKEN_KEY","logout","r","Math","floor","random","g","b","rgba","AppBar","className","position","boxShadow","borderBottom","height","alignItems","transition","Toolbar","disableGutters","mx","justifyContent","xs","md","IconButton","size","event","currentTarget","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","to","slice","MenuItem","border","borderTop","textAlign","flexGrow","columnGap","Tooltip","Add","FormLabel","type","checked","onChange","p","Avatar","src","overflow","content","borderRadius","top","left","transform","setting","style","bgcolor","paddingLeft","paddingRight","paddingTop","paddingBottom","BasicModal","children","Modal","RequireUser","currentUser","usersReducer","users","currentUserData","find","user","login","setItem","JSON","stringify","setCurrentUser","fetchUsers","RequireAuth","token","loginReducer","welcomePath","replace","BACKGROUND_COLOR","COLUMN_COLOR","EditProfile","loading","serverErrors","defaultValues","name","clearErrors","Container","align","fontSize","onSubmit","password","updateUser","userData","label","marginTop","autoComplete","Button","getContainerUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ContainerRoot","styled","overridesResolver","styles","ownerState","root","capitalize","maxWidth","fixed","theme","_extends","marginLeft","boxSizing","marginRight","spacing","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","unit","max","inProps","useThemeProps","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx"],"sourceRoot":""}